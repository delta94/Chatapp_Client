{"version":3,"sources":["components/providers/Waiting/style.module.scss","apis/apiClient.js","components/chatMessages/index.js","constants/index.js","apis/userApi.js","apis/roomApi.js","apis/messageApi.js","components/providers/Login/index.js","components/providers/Toast/index.js","components/providers/Waiting/index.js","helpers/handleToast.js","containers/Login/index.js","components/Sidebar/index.js","components/chatContaint/ChatContaintHeader/index.js","components/chatContaint/ChatContaintInput/index.js","components/chatContaint/ChatContainrRooms/index.js","components/chatContaint/index.js","components/chatMessages/ChatMessagesHeader/index.js","components/chatMessages/ChatMessagesList/index.js","components/chatMessages/ChatMessagesInput/index.js","containers/Chat/index.js","containers/Register/index.js","containers/Main/index.js","containers/Setting/index.js","routes/privateRoute.js","routes/index.js","App.js","serviceWorker.js","index.js","assets/images/person.svg"],"names":["module","exports","axiosClient","axios","create","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","token","localStorage","getItem","currentConfig","Authorization","response","data","socket","baseUrl","ENDPOINT","userApi","this","API_ENDPOINT","post","userId","roomApi","_userId","apiClient","get","value","messageApi","roomId","url","LoginContext","React","createContext","LoginProvider","children","useState","user","setUser","isLogin","setLogin","Provider","ToastContext","ToastProvider","toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","WaitingContext","WaitingProvider","isWaiting","setIsWaiting","className","cls","waiting__wrapper","icon","faSync","handleToast","message","status","success","progress","undefined","error","Login","useContext","LoginSchema","Yup","shape","email","required","password","min","max","fetchData","values","getToken","res","Error","setItem","errorMessage","formik","useFormik","initialValues","validationSchema","onSubmit","to","pathname","Container","fluid","Form","handleSubmit","src","person","alt","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","faAt","Input","type","size","name","placeholder","onChange","handleChange","onBlur","handleBlur","FormText","color","touched","errors","faLock","Button","outline","Sidebar","Nav","style","backgroundImage","avatar","faCommentDots","faCog","href","onClick","evt","preventDefault","removeItem","faSignOutAlt","ChatContaintHeader","setRooms","modal","setModal","toggle","RoomSchema","createRoom","room","currentRooms","_id","faPlus","Modal","isOpen","ModalHeader","ModalBody","Label","for","id","ModalFooter","ChatContaintInput","onSearch","search","setSearch","faSearch","target","onKeyPress","ChatContaintRooms","rooms","map","ChatContaint","searchRooms","setSearchRooms","getRooms","useEffect","which","keyCode","getRoomsByName","currentrRooms","classNames","length","item","key","ChatMessagesHeader","roomName","ChatMessagesList","messages","ChatMessagesInput","sendMessage","setMessage","faPaperPlane","ChatMessages","location","parse","setMessages","getMessagesByRoomId","newMessages","emit","err","io","on","text","console","log","currentMessage","currentMessages","userName","off","moment","dateCreate","fromNow","faCheck","Chat","Row","Col","lg","sm","path","component","Register","isCompleted","setCompleted","register","faUser","Main","Setting","file","setFile","updateShema","formData","update","currentUser","FormData","append","files","hidden","PrivateRoute","Component","checkToken","render","Routes","Waiting","Toast","exact","App","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2e439e2b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"waiting__wrapper\":\"style_waiting__wrapper__14uiZ\"};","import axios from 'axios';\nimport queryString from 'query-string';\n\nconst axiosClient = axios.create({\n  headers: { 'content-type': 'application/json' },\n  // headers: { 'content-type': 'multipart/form-data' },\n  paramsSerializer: (params) => queryString.stringify(params),\n});\n\naxiosClient.interceptors.request.use(async (config) => {\n  const token = localStorage.getItem('token');\n  const currentConfig = config;\n\n  if (token) {\n    currentConfig.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return currentConfig;\n});\n\naxiosClient.interceptors.response.use((response) => {\n  if (response && response.data) {\n    return response.data;\n  }\n\n  return response;\n});\n\nexport default axiosClient;\n","/* eslint-disable no-underscore-dangle */\nimport React, { useState, useEffect, useContext } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport ChatMessagesHeader from './ChatMessagesHeader';\nimport ChatMessagesList from './ChatMessagesList';\nimport ChatMessagesInput from './ChatMessagesInput';\n\n// Constaints\nimport { ENDPOINT } from '../../constants/index';\n\n// Contexts\nimport { LoginContext, WaitingContext, ToastContext } from '../providers';\n\nimport handleToast from '../../helpers/handleToast';\n\n// Apis\nimport messageApi from '../../apis/messageApi';\n\nlet socket;\n\nconst ChatMessages = ({ location }) => {\n  const { roomId, roomName } = queryString.parse(location.search);\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n\n  const { user } = useContext(LoginContext);\n  const { toast } = useContext(ToastContext);\n  const { setIsWaiting } = useContext(WaitingContext);\n\n  const fetchData = async () => {\n    try {\n      const {\n        status,\n        data: { messages: newMessages },\n      } = await messageApi.getMessagesByRoomId(roomId);\n\n      if (status !== 'success' || !newMessages) {\n        throw new Error('Có lỗi xảy ra');\n      }\n\n      setIsWaiting(() => false);\n      setMessages(() => newMessages);\n\n      // eslint-disable-next-line no-underscore-dangle\n      socket.emit('join', { roomId, userId: user._id }, (err) => {\n        if (err) {\n          return handleToast(toast, 'Có lỗi xảy ra!', false);\n        }\n\n        return true;\n      });\n\n      return true;\n    } catch (error) {\n      return handleToast(toast, 'Có lỗi xảy ra!', false);\n    }\n  };\n\n  // ComponentDidMount => tải messages\n  useEffect(() => {\n    socket = io(ENDPOINT);\n\n    socket.on('event', (text) => {\n      // eslint-disable-next-line no-console\n      console.log(text);\n    });\n\n    socket.on('message', (currentMessage) => {\n      // debugger;\n      setMessages((currentMessages) => [...currentMessages, currentMessage]);\n    });\n    // debugger;\n    setIsWaiting(() => true);\n    fetchData();\n\n    return () => {\n      socket.emit('disconnect', { roomId, userName: user.name });\n\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n\n  const sendMessage = (evt) => {\n    evt.preventDefault();\n\n    socket.emit(\n      'sendMessage',\n      // eslint-disable-next-line no-underscore-dangle\n      { userId: user._id, roomId, text: message },\n      (err) => {\n        if (err) {\n          // eslint-disable-next-line no-console\n          console.log('Có lỗi xảy ra');\n          return;\n        }\n\n        setMessage('');\n      },\n    );\n  };\n\n  return (\n    <div className=\"chat-messages h-100\">\n      <ChatMessagesHeader roomName={roomName} />\n      <ScrollToBottom className=\"messages-scroll\">\n        <ChatMessagesList messages={messages}>\n          {(item, key) => (item.userId === user._id ? (\n            <li className=\"chat-message-me\" key={key}>\n              <div className=\"chat-message-me__text\">\n                <p>{item.text}</p>\n                <span>{moment(item.dateCreate).fromNow()}</span>\n              </div>\n              <FontAwesomeIcon icon={faCheck} className=\"fa-sm\" />\n            </li>\n          ) : (\n            <li className=\"chat-message-friend\" key={key}>\n              <div className=\"chat-message-friend__infor\">\n                <img\n                  className=\"rounded-circle\"\n                  src={\n                    item.user.name === 'admin'\n                      ? 'https://picsum.photos/200'\n                      : item.user.avatar\n                  }\n                  alt=\"Person\"\n                />\n                <small className=\"text-muted\">{item.user.name}</small>\n              </div>\n              <div className=\"chat-message-friend__text\">\n                <p>{item.text}</p>\n                <span>{moment(item.dateCreate).fromNow()}</span>\n              </div>\n            </li>\n          ))}\n        </ChatMessagesList>\n      </ScrollToBottom>\n      <ChatMessagesInput\n        sendMessage={sendMessage}\n        message={message}\n        setMessage={setMessage}\n      />\n    </div>\n  );\n};\n\nChatMessages.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  location: PropTypes.object.isRequired,\n};\n\nexport default ChatMessages;\n","export const urlImage = 'http://localhost:5000/';\nexport const baseUrl = 'https://chap-app-server.herokuapp.com';\n// export const baseUrl = 'http://localhost:5000';\n// export const ENDPOINT = 'http://localhost:5000';\nexport const ENDPOINT = 'https://chap-app-server.herokuapp.com';\n","import axiosClient from './apiClient';\nimport { baseUrl } from '../constants';\n\nclass UserApi {\n  constructor() {\n    this.API_ENDPOINT = `${baseUrl}/api/auth`;\n  }\n\n  getToken(data) {\n    return axiosClient.post(`${this.API_ENDPOINT}/login`, data);\n  }\n\n  checkToken(data) {\n    return axiosClient.post(`${this.API_ENDPOINT}/check`, data);\n  }\n\n  register(data) {\n    return axiosClient.post(`${this.API_ENDPOINT}/register`, data);\n  }\n\n  update(data, userId) {\n    return axiosClient.post(`${this.API_ENDPOINT}/update/${userId}`, data);\n  }\n}\n\nconst userApi = new UserApi();\nexport default userApi;\n","import apiClient from './apiClient';\nimport { baseUrl } from '../constants';\n\nconst API_ENDPOINT = `${baseUrl}/api/rooms`;\n\nclass RoomApi {\n  // eslint-disable-next-line class-methods-use-this\n  createRoom(_userId, data) {\n    return apiClient.post(`${API_ENDPOINT}/${_userId}`, data);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getRooms(_userId) {\n    return apiClient.get(`${API_ENDPOINT}/${_userId}`);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  getRoomsByName(value) {\n    return apiClient.get(`${API_ENDPOINT}/search?q=${value}`);\n  }\n}\n\nconst roomApi = new RoomApi();\nexport default roomApi;\n","import apiClient from './apiClient';\n\nimport { baseUrl } from '../constants';\n\nclass MessageApi {\n  // eslint-disable-next-line class-methods-use-this\n  getMessagesByRoomId(roomId) {\n    const url = `${baseUrl}/api/messages/${roomId}`;\n\n    return apiClient.get(url);\n  }\n}\n\nconst messageApi = new MessageApi();\nexport default messageApi;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LoginContext = React.createContext();\n\nconst LoginProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isLogin, setLogin] = useState(false);\n\n  return (\n    <LoginContext.Provider\n      value={{\n        user,\n        setUser,\n        isLogin,\n        setLogin,\n      }}\n    >\n      {children}\n    </LoginContext.Provider>\n  );\n};\n\nLoginProvider.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.object.isRequired,\n};\n\nexport default LoginProvider;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Toast\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport const ToastContext = React.createContext();\n\nconst ToastProvider = ({ children }) => (\n  <ToastContext.Provider value={{ toast }}>\n    {children}\n    <ToastContainer\n      position=\"top-right\"\n      autoClose={5000}\n      hideProgressBar={false}\n      newestOnTop={false}\n      closeOnClick\n      rtl={false}\n      pauseOnFocusLoss\n      draggable\n      pauseOnHover\n    />\n  </ToastContext.Provider>\n);\n\nToastProvider.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.array.isRequired,\n};\n\nexport default ToastProvider;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSync } from '@fortawesome/free-solid-svg-icons';\n\nimport cls from './style.module.scss';\n\nexport const WaitingContext = React.createContext();\n\nconst WaitingProvider = ({ children }) => {\n  const [isWaiting, setIsWaiting] = useState(false);\n\n  return (\n    <WaitingContext.Provider value={{ isWaiting, setIsWaiting }}>\n      {children}\n      {isWaiting && (\n        <div className={cls.waiting__wrapper}>\n          <div className=\"waiting\">\n            <FontAwesomeIcon className=\"fa-spin fa-5x\" icon={faSync} />\n          </div>\n        </div>\n      )}\n    </WaitingContext.Provider>\n  );\n};\n\nWaitingProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default WaitingProvider;\n","const handleToast = (toast, message, status = true) => {\n  if (status) {\n    return toast.success(message, {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  }\n  return toast.error(message, {\n    position: 'top-right',\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n};\n\nexport default handleToast;\n","import React, { useContext } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faAt } from '@fortawesome/free-solid-svg-icons';\n\nimport { Link, Redirect } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  FormText,\n  Container,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from 'reactstrap';\nimport { userApi } from '../../apis';\nimport {\n  LoginContext,\n  ToastContext,\n  WaitingContext,\n} from '../../components/providers';\n\n// HandleToast\nimport handleToast from '../../helpers/handleToast';\n\n// CSS\nimport './login.css';\n\n// Images\nimport person from '../../assets/images/person.svg';\n\nconst Login = () => {\n  const { isLogin, setLogin, setUser } = useContext(LoginContext);\n  const { toast } = useContext(ToastContext);\n  const { setIsWaiting } = useContext(WaitingContext);\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .email('Email không hợp lệ')\n      .required('Bắt buộc phải nhập email'),\n    password: Yup.string()\n      .min(6, 'Password phải có ít nhất 6 ký tự')\n      .max(10, 'Bạn không được nhập quá 10 ký tự')\n      .required('Bạn bắt buộc phải nhập mật khẩu'),\n  });\n\n  const fetchData = async (values) => {\n    try {\n      const res = await userApi.getToken(values);\n\n      if (res.status === 'success') {\n        const {\n          data: { message, token, user },\n        } = res;\n        if (!token || !user) {\n          throw new Error('Có lỗi xảy ra, vui lòng thử lại');\n        }\n\n        handleToast(toast, message);\n        localStorage.setItem('token', token);\n        setLogin(() => !isLogin);\n        setUser(() => user);\n        setIsWaiting(() => false);\n      } else if (res.status === 'failed') {\n        const {\n          error: { message: errorMessage },\n        } = res;\n        throw new Error(errorMessage);\n      }\n    } catch (error) {\n      setIsWaiting(() => false);\n      handleToast(toast, error.message, false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values) => {\n      // Values = { email, password }\n      setIsWaiting(() => true);\n      fetchData(values);\n    },\n  });\n\n  return !isLogin ? (\n    <Container className=\"p-0\" fluid>\n      <div className=\"form-wrapper\">\n        <Form className=\"login-form rounded\" onSubmit={formik.handleSubmit}>\n          <div className=\"login-image\">\n            <img className=\"rounded-circle\" src={person} alt=\"person\" />\n          </div>\n          <FormGroup className=\"my-3 w-100\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <FontAwesomeIcon icon={faAt} className=\"fa-lg\" />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                type=\"text\"\n                size=\"lg\"\n                name=\"email\"\n                placeholder=\"Nhập email của bạn\"\n                onChange={formik.handleChange}\n                value={formik.values.email}\n                onBlur={formik.handleBlur}\n              />\n            </InputGroup>\n            <FormText color=\"danger\">\n              {formik.touched.email && formik.errors.email}\n            </FormText>\n          </FormGroup>\n          <FormGroup className=\"w-100\">\n            <InputGroup>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <FontAwesomeIcon icon={faLock} className=\"fa-lg\" />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                type=\"password\"\n                size=\"lg\"\n                name=\"password\"\n                placeholder=\"Nhập mật khẩu của bạn\"\n                onChange={formik.handleChange}\n                values={formik.values.password}\n                onBlur={formik.handleBlur}\n              />\n            </InputGroup>\n            <FormText color=\"danger\">\n              {formik.touched.password && formik.errors.password}\n            </FormText>\n          </FormGroup>\n          <Button className=\"my-3\" size=\"lg\" outline color=\"primary\">\n            Đăng nhập\n          </Button>\n          <p className=\"text-white\">\n            Bạn chưa có tài khoản\n            <span>\n              <Link className=\"text-success\" to=\"/register\">\n                Tạo tài khoản\n              </Link>\n            </span>\n          </p>\n        </Form>\n      </div>\n    </Container>\n  ) : (\n    <Redirect\n      to={{\n        pathname: '/main',\n      }}\n    />\n  );\n};\n\nexport default Login;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useContext } from 'react';\nimport { Nav } from 'reactstrap';\nimport { Link } from 'react-router-dom';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCommentDots,\n  faCog,\n  faSignOutAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { LoginContext } from '../providers';\n\nconst Sidebar = () => {\n  const { user, setUser, setLogin } = useContext(LoginContext);\n\n  const onClockOut = (evt) => {\n    evt.preventDefault();\n    localStorage.removeItem('token');\n    setUser(() => null);\n    setLogin(() => false);\n  };\n\n  return (\n    user && (\n      <Nav className=\"navbar-main\">\n        <div className=\"navbar-main__header\">\n          <div\n            className=\"rounded-circle navbar-main__header__avatar\"\n            style={{ backgroundImage: `url('${user.avatar}')` }}\n          />\n          <p className=\"font-weight-bold mt-1\">{user.name}</p>\n        </div>\n        <ul className=\"list-unstyled navbar-main__menu\">\n          <li>\n            <Link to=\"/main/chat\">\n              <span className=\"mr-2\">\n                <FontAwesomeIcon icon={faCommentDots} className=\"fa-lg\" />\n              </span>\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/main/setting\">\n              <span className=\"mr-2\">\n                <FontAwesomeIcon icon={faCog} className=\"fa-lg\" />\n              </span>\n              Setting\n            </Link>\n          </li>\n        </ul>\n        <div className=\"navbar-main__footer\">\n          <a href=\"#\" onClick={onClockOut}>\n            <span>\n              <FontAwesomeIcon icon={faSignOutAlt} className=\"fa-lg\" />\n            </span>\n            Log out\n          </a>\n        </div>\n      </Nav>\n    )\n  );\n};\n\nexport default Sidebar;\n","import React, { useState, useContext } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\n// Contexts\nimport { ToastContext, WaitingContext } from '../../providers';\n\nimport handleToast from '../../../helpers/handleToast';\n\nimport { roomApi } from '../../../apis';\n\nconst ChatContaintHeader = ({ setRooms, user }) => {\n  const [modal, setModal] = useState(false);\n  const toggle = () => setModal(!modal);\n  const { toast } = useContext(ToastContext);\n  const { setIsWaiting } = useContext(WaitingContext);\n\n  const RoomSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'Tên phòng phải nhiều hơn 3 ký tự')\n      .max(30, 'Tên phòng không quá 30 ký tự')\n      .required('Bạn phải nhập tên phòng'),\n  });\n\n  const fetchData = async (userId, values) => {\n    setIsWaiting(() => true);\n    try {\n      const res = await roomApi.createRoom(userId, values);\n\n      if (res.status === 'success') {\n        const { data: { room, message } } = res;\n\n        if (!room || !message) {\n          throw new Error('Có lỗi xảy ra');\n        }\n\n        setIsWaiting(() => false);\n        toggle();\n        setRooms((currentRooms) => [...currentRooms, room]);\n        handleToast(toast, message);\n      } else if (res.status === 'failed') {\n        const { error: { message } } = res;\n        throw new Error(message);\n      }\n    } catch (error) {\n      setIsWaiting(() => false);\n      toggle();\n      handleToast(toast, error.message, false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n    },\n    validationSchema: RoomSchema,\n    onSubmit: (values) => {\n      // eslint-disable-next-line no-underscore-dangle\n      fetchData(user._id, values);\n    },\n  });\n\n  return (\n    <div className=\"chat-containt__header\">\n      <h4>Chats</h4>\n\n      <Button onClick={toggle}>\n        <span className=\"mr-2\">\n          <FontAwesomeIcon icon={faPlus} />\n        </span>\n        Create New Room\n      </Button>\n\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Tạo phòng</ModalHeader>\n        <ModalBody>\n          <Form onSubmit={formik.handleSubmit}>\n            <FormGroup>\n              <Label for=\"name\">Tên phòng</Label>\n              <Input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"Nhập tên phòng\"\n                onChange={formik.handleChange}\n                value={formik.values.name}\n                onBlur={formik.handleBlur}\n              />\n              <p className=\"text-danger\">\n                {formik.touched.name && formik.errors.name}\n              </p>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={formik.handleSubmit}>\n            Tạo\n          </Button>\n          <Button color=\"danger\" onClick={toggle}>\n            Hủy\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n};\n\nChatContaintHeader.propTypes = {\n  setRooms: PropTypes.func.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  user: PropTypes.object.isRequired,\n};\n\nexport default ChatContaintHeader;\n","import React from 'react';\nimport { Input } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\n\nconst ChatContaintInput = ({ onSearch, search, setSearch }) => (\n  <div className=\"chat-containt__input-group my-3\">\n    <FontAwesomeIcon icon={faSearch} />\n    <Input\n      type=\"text\"\n      name=\"search\"\n      placeholder=\"Tìm kiếm\"\n      value={search}\n      onChange={(evt) => setSearch(evt.target.value)}\n      onKeyPress={(evt) => onSearch(evt, search)}\n    />\n  </div>\n);\n\nChatContaintInput.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  search: PropTypes.string.isRequired,\n  setSearch: PropTypes.func.isRequired,\n};\n\nexport default ChatContaintInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ChatContaintRooms = ({ rooms, children }) => (\n  <ul className=\"list-unstyled rooms\">{rooms.map(children)}</ul>\n);\n\nChatContaintRooms.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  rooms: PropTypes.array.isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default ChatContaintRooms;\n","import React, { useState, useEffect, useContext } from 'react';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'reactstrap';\nimport classNames from 'classnames';\n\n// Contexts\nimport { LoginContext, WaitingContext, ToastContext } from '../providers';\n\nimport handleToast from '../../helpers/handleToast';\n// Apis\nimport { roomApi } from '../../apis';\n\nimport ChatContaintHeader from './ChatContaintHeader';\nimport ChatContaintInput from './ChatContaintInput';\nimport ChatContaintRooms from './ChatContainrRooms';\n\nconst ChatContaint = () => {\n  const { user } = useContext(LoginContext);\n  const { toast } = useContext(ToastContext);\n  const { setIsWaiting } = useContext(WaitingContext);\n\n  const [rooms, setRooms] = useState([]);\n  const [searchRooms, setSearchRooms] = useState([]);\n  const [search, setSearch] = useState('');\n\n  const fetchData = async (userId) => {\n    try {\n      const {\n        status,\n        data: { rooms: currentRooms },\n      } = await roomApi.getRooms(userId);\n\n      if (status !== 'success' || !currentRooms) {\n        throw new Error('Có lỗi xảy ra');\n      }\n\n      setIsWaiting(() => false);\n      setRooms(() => currentRooms);\n    } catch (error) {\n      setIsWaiting(() => false);\n      handleToast(toast, 'Có lỗi xảy ra, xin vui lòng thử lại sau!', false);\n    }\n  };\n\n  useEffect(() => {\n    setIsWaiting(() => true);\n    // eslint-disable-next-line no-underscore-dangle\n    fetchData(user._id);\n  }, []);\n\n  const onSearch = async (evt, value) => {\n    // Khi nhấn Enter -> Lấy danh sách các phòng có tên thõa mản\n    if ((evt.which === 13 || evt.keyCode === 13) && value) {\n      setIsWaiting(() => true);\n      try {\n        const {\n          status,\n          data: { rooms: currentrRooms },\n        } = await roomApi.getRoomsByName(value);\n\n        if (status !== 'success' || !currentrRooms) {\n          throw new Error('Có lỗi xảy ra');\n        }\n\n        setIsWaiting(() => false);\n        setSearchRooms(() => currentrRooms);\n        setSearch('');\n      } catch (error) {\n        setIsWaiting(() => false);\n        handleToast(toast, 'Có lỗi xảy ra, xin vui lòng thử lại sau!', false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"chat-containt h-100\">\n      <ChatContaintHeader setRooms={setRooms} user={user} />\n      <ChatContaintInput\n        onSearch={onSearch}\n        search={search}\n        setSearch={setSearch}\n      />\n      <Button\n        className={classNames({ 'd-none': !searchRooms.length })}\n        outline\n        color=\"danger\"\n        onClick={() => setSearchRooms([])}\n      >\n        Reset\n      </Button>\n      <ScrollToBottom className=\"rooms-scroll\">\n        <ChatContaintRooms\n          rooms={searchRooms.length !== 0 ? searchRooms : rooms}\n        >\n          {(item, key) => (\n            <li className=\"room\" key={key}>\n              <Link\n                // eslint-disable-next-line no-underscore-dangle\n                to={`/main/chat/messages?roomId=${item._id}&roomName=${item.name}`}\n              >\n                {item.name}\n              </Link>\n            </li>\n          )}\n        </ChatContaintRooms>\n      </ScrollToBottom>\n    </div>\n  );\n};\n\nexport default ChatContaint;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ChatMessagesHeader = ({ roomName }) => (\n  <div className=\"chat-messages__header\">\n    <div className=\"chat-messages__person\">\n      <h4>{roomName}</h4>\n    </div>\n  </div>\n);\n\nChatMessagesHeader.propTypes = {\n  roomName: PropTypes.string.isRequired,\n};\n\nexport default ChatMessagesHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ChatMessagesList = ({ messages, children }) => (\n  <ul className=\"list-unstyled chat-messages-list\">\n    {messages.map(children)}\n  </ul>\n);\n\nChatMessagesList.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  messages: PropTypes.array.isRequired,\n  children: PropTypes.func.isRequired,\n};\n\nexport default ChatMessagesList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\n\nimport { Form, Input, Button } from 'reactstrap';\n\nconst ChatMessagesInput = ({ sendMessage, message, setMessage }) => {\n  const onKeyPress = (evt) => {\n    if ((evt.which === 13 || evt.keyCode === 13) && message) {\n      sendMessage(evt);\n    }\n  };\n\n  return (\n    <Form className=\"chat-messages__input\">\n      <Input\n        type=\"textarea\"\n        name=\"message\"\n        placeholder=\"Gởi tin nhắn...\"\n        value={message}\n        onChange={(evt) => setMessage(evt.target.value)}\n        onKeyPress={onKeyPress}\n      />\n      <Button\n        className=\"chat-messages__input__btn\"\n        type=\"button\"\n        onClick={(evt) => sendMessage(evt)}\n      >\n        <FontAwesomeIcon icon={faPaperPlane} className=\"fa-sm\" />\n      </Button>\n    </Form>\n  );\n};\n\nChatMessagesInput.propTypes = {\n  sendMessage: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n  setMessage: PropTypes.func.isRequired,\n};\n\nexport default ChatMessagesInput;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { Container, Row, Col } from 'reactstrap';\n\nimport { ChatContaint, ChatMessages } from '../../components';\n\nconst Chat = () => (\n  <Container className=\"h-100\">\n    <Row className=\"h-100\">\n      <Col className=\"d-none d-lg-block\" lg=\"4\">\n        <ChatContaint />\n      </Col>\n      <Col sm=\"12\" lg=\"8\">\n        <Route path=\"/main/chat/messages\" component={ChatMessages} />\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default Chat;\n","import React, { useState, useContext } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n// Font Awesome\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLock, faAt, faUser } from '@fortawesome/free-solid-svg-icons';\n\nimport { Redirect } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  FormGroup,\n  Input,\n  FormText,\n  Container,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n} from 'reactstrap';\nimport { userApi } from '../../apis';\nimport { LoginContext, WaitingContext, ToastContext } from '../../components/providers';\n\n// handleToast\nimport handleToast from '../../helpers/handleToast';\n\n// CSS\nimport '../Login/login.css';\n\n// Images\nimport person from '../../assets/images/person.svg';\n\nconst Register = () => {\n  const [isCompleted, setCompleted] = useState(false);\n  const { isLogin } = useContext(LoginContext);\n  const { toast } = useContext(ToastContext);\n  const { setIsWaiting } = useContext(WaitingContext);\n\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string()\n      .email('Email không hợp lệ')\n      .required('Bắt buộc phải nhập email'),\n    password: Yup.string()\n      .min(6, 'Password phải có ít nhất 6 ký tự')\n      .max(10, 'Bạn không được nhập quá 10 ký tự')\n      .required('Bạn bắt buộc phải nhập mật khẩu'),\n    name: Yup.string()\n      .max(30, 'Bạn không được nhập dài quá 30 ký tự')\n      .required('Bạn bắt buộc phải nhập tên'),\n  });\n\n  const fetchData = async (values) => {\n    try {\n      const res = await userApi.register(values);\n\n      if (res.status === 'success') {\n        const { data: { message } } = res;\n\n        setIsWaiting(() => false);\n        setCompleted(() => !isCompleted);\n        handleToast(toast, message);\n      } else if (res.status === 'failed') {\n        const { error: { message } } = res;\n        throw new Error(message);\n      }\n    } catch (error) {\n      setIsWaiting(() => false);\n      handleToast(toast, error.message, false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      name: '',\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values) => {\n      // Values = { email, password }\n      setIsWaiting(() => true);\n      fetchData(values);\n    },\n  });\n\n  return !isCompleted ? (\n    !isLogin && (\n      <Container className=\"p-0\" fluid>\n        <div className=\"form-wrapper\">\n          <Form className=\"login-form rounded\" onSubmit={formik.handleSubmit}>\n            <div className=\"login-image\">\n              <img className=\"rounded-circle\" src={person} alt=\"person\" />\n            </div>\n            <FormGroup className=\"my-3 w-100\">\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <FontAwesomeIcon icon={faAt} className=\"fa-lg\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"text\"\n                  size=\"lg\"\n                  name=\"email\"\n                  placeholder=\"Nhập email của bạn\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                />\n              </InputGroup>\n              <FormText color=\"danger\">\n                {formik.touched.email && formik.errors.email}\n              </FormText>\n            </FormGroup>\n            <FormGroup className=\"mb-3 w-100\">\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <FontAwesomeIcon icon={faUser} className=\"fa-lg\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"text\"\n                  size=\"lg\"\n                  name=\"name\"\n                  placeholder=\"Nhập tên của bạn\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                  onBlur={formik.handleBlur}\n                />\n              </InputGroup>\n              <FormText color=\"danger\">\n                {formik.touched.name && formik.errors.name}\n              </FormText>\n            </FormGroup>\n            <FormGroup className=\"w-100\">\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <FontAwesomeIcon icon={faLock} className=\"fa-lg\" />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  type=\"password\"\n                  size=\"lg\"\n                  name=\"password\"\n                  placeholder=\"Nhập mật khẩu của bạn\"\n                  onChange={formik.handleChange}\n                  values={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n              </InputGroup>\n              <FormText color=\"danger\">\n                {formik.touched.password && formik.errors.password}\n              </FormText>\n            </FormGroup>\n            <Button className=\"my-3\" size=\"lg\" outline color=\"primary\">\n              Đăng ký\n            </Button>\n          </Form>\n        </div>\n      </Container>\n    )\n  ) : (\n    <Redirect\n      to={{\n        pathname: '/',\n      }}\n    />\n  );\n};\n\nexport default Register;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport './main.css';\n\n// Components\nimport { Sidebar } from '../../components';\nimport { Chat, Setting } from '../index';\n\nconst Main = () => (\n  <div className=\"page-wrapper\">\n    <div className=\"page-inner\">\n      <Sidebar />\n\n      <div className=\"main-wrapper\">\n        <Switch>\n          <Route path=\"/main/chat\">\n            <Chat />\n          </Route>\n          <Route path=\"/main/setting\" component={Setting} />\n        </Switch>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Main;\n","import React, { useContext, useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Container,\n  Row,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Button,\n  FormText,\n} from 'reactstrap';\n\nimport { LoginContext, WaitingContext, ToastContext } from '../../components/providers';\n\nimport handleToast from '../../helpers/handleToast';\n\nimport userApi from '../../apis/userApi';\n\nimport './setting.css';\n\nconst Setting = () => {\n  const { user, setUser } = useContext(LoginContext);\n  const { toast } = useContext(ToastContext);\n  const { setIsWaiting } = useContext(WaitingContext);\n\n  const [file, setFile] = useState(null);\n\n  const updateShema = Yup.object().shape({\n    name: Yup.string()\n      .min(3, 'Tên phải nhiều hơn 3 ký tự')\n      .max(30, 'Tên không được quá 30 ký tự')\n      .required('Bạn phải nhập tên'),\n    email: Yup.string()\n      .email('Bạn nhập sai định dạng')\n      .required('Bạn phải nhập email'),\n    password: Yup.string()\n      .min(3, 'Mật khẩu phải nhiều hơn 3 ký tự')\n      .max(10, 'Mật khẩu không quá 10 ký tự'),\n  });\n\n  const fetchData = async (formData, userId) => {\n    // debugger;\n    try {\n      const res = await userApi.update(formData, userId);\n\n      if (res.status === 'success') {\n        const { data: { user: currentUser, message } } = res;\n\n        if (!currentUser || !message) {\n          throw new Error('Có lỗi xảy ra');\n        }\n\n        setIsWaiting(() => false);\n        handleToast(toast, message);\n        setUser(() => currentUser);\n      } else if (res.status === 'failed') {\n        const { error: { message } } = res;\n        throw new Error(message);\n      }\n    } catch (error) {\n      // debugger;\n      setIsWaiting(() => false);\n      handleToast(toast, error.message, false);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: user.name,\n      email: user.email,\n      password: '',\n    },\n    validationSchema: updateShema,\n    onSubmit: () => {\n      // debugger;\n      const formData = new FormData();\n      formData.append('name', formik.values.name);\n      formData.append('email', formik.values.email);\n      formData.append('password', formik.values.password);\n      formData.append('avatar', file);\n\n      setIsWaiting(() => true);\n      // eslint-disable-next-line no-underscore-dangle\n      fetchData(formData, user._id);\n    },\n  });\n\n  return (\n    <div className=\"setting-wrapper h-100\">\n      <Container className=\"h-100 d-flex flex-column\">\n        <h4 className=\"mb-3\">Cài đặt</h4>\n        <Row className=\"flex-grow-1\">\n          <Col sm=\"12\">\n            <div className=\"setting-personInformation border\">\n              <h4 className=\"border-bottom bg-light\">Thông tin cá nhân</h4>\n              <Form className=\"p-5 flex-grow-1\" onSubmit={formik.handleSubmit}>\n                <FormGroup className=\"row mb-3\">\n                  <Label for=\"name\" className=\"col-sm-2 col-form-label\">\n                    Tên\n                  </Label>\n                  <div className=\"col-sm-10\">\n                    <Input\n                      type=\"text\"\n                      id=\"name\"\n                      name=\"name\"\n                      value={formik.values.name}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                    />\n                    <FormText color=\"danger\">\n                      {formik.touched.name && formik.errors.name}\n                    </FormText>\n                  </div>\n                </FormGroup>\n                <FormGroup className=\"row mb-3\">\n                  <Label for=\"email\" className=\"col-sm-2 col-form-label\">\n                    Email\n                  </Label>\n                  <div className=\"col-sm-10\">\n                    <Input\n                      type=\"text\"\n                      id=\"email\"\n                      name=\"email\"\n                      value={formik.values.email}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                    />\n                    <FormText color=\"danger\">\n                      {formik.touched.email && formik.errors.email}\n                    </FormText>\n                  </div>\n                </FormGroup>\n                <FormGroup className=\"row mb-3\">\n                  <Label for=\"password\" className=\"col-sm-2 col-form-label\">\n                    Mật khẩu mới\n                  </Label>\n                  <div className=\"col-sm-10\">\n                    <Input\n                      type=\"password\"\n                      id=\"password\"\n                      name=\"password\"\n                      value={formik.values.password}\n                      onChange={formik.handleChange}\n                      onBlur={formik.handleBlur}\n                    />\n                    <FormText color=\"danger\">\n                      {formik.touched.password && formik.errors.password}\n                    </FormText>\n                  </div>\n                </FormGroup>\n                <FormGroup className=\"row mb-3\">\n                  <p className=\"col-sm-2 col-form-label\">Ảnh đại diện</p>\n                  <div className=\"col-sm-10\">\n                    <Label for=\"avatar\" className=\"avatar__label\">\n                      Chọn file\n                    </Label>\n                    <Input\n                      type=\"file\"\n                      id=\"avatar\"\n                      name=\"avatar\"\n                      onChange={(evt) => setFile(evt.target.files[0])}\n                      hidden\n                    />\n                    <span className=\"ml-2\">\n                      {file ? file.name : 'Bạn chưa chọn ảnh'}\n                    </span>\n                  </div>\n                </FormGroup>\n                <FormGroup className=\"row\">\n                  <div className=\"col-sm-10 offset-sm-2\">\n                    <Button className=\"mr-2\" type=\"reset\" color=\"danger\">\n                      Hủy\n                    </Button>\n                    <Button type=\"submit\" color=\"primary\">\n                      Cập nhật\n                    </Button>\n                  </div>\n                </FormGroup>\n              </Form>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n};\n\nexport default Setting;\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { LoginContext, ToastContext } from '../components/providers';\n\nimport handleToast from '../helpers/handleToast';\n\n// Apis\nimport { userApi } from '../apis';\n\nconst PrivateRoute = ({ path, component: Component }) => {\n  const { isLogin, setLogin, setUser } = useContext(LoginContext);\n  const { toast } = useContext(ToastContext);\n  // const { setIsWaiting } = useContext(WaitingContext);\n\n  const fetchData = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token && !isLogin) {\n      try {\n        const {\n          status,\n          data: { user },\n        } = await userApi.checkToken({ token });\n\n        // debugger;\n        if (status !== 'success' || !user) {\n          throw new Error();\n        }\n\n        setLogin(() => true);\n        setUser(() => user);\n        // setIsWaiting(() => false);\n      } catch (error) {\n        // setIsWaiting(() => false);\n        handleToast(toast, 'Có lỗi xảy ra!', false);\n      }\n    }\n  };\n\n  // setIsWaiting(() => true);\n  fetchData();\n\n  return (\n    <Route\n      path={path}\n      render={() => (!isLogin ? (\n        <Redirect\n          to={{\n            pathname: '/',\n          }}\n        />\n      ) : (\n        <Component />\n      ))}\n    />\n  );\n};\n\nPrivateRoute.propTypes = {\n  path: PropTypes.string.isRequired,\n  component: PropTypes.elementType.isRequired,\n};\n\nexport default PrivateRoute;\n","import React from 'react';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { Main, Login, Register } from '../containers';\nimport {\n  LoginProvider,\n  ToastProvider,\n  WaitingProvider,\n} from '../components/providers';\nimport PrivateRoute from './privateRoute';\n\nconst Routes = () => (\n  <Router>\n    <LoginProvider>\n      <WaitingProvider>\n        <ToastProvider>\n          <Route path=\"/\" exact component={Login} />\n          <Route path=\"/register\" exact component={Register} />\n          <PrivateRoute path=\"/main\" component={Main} />\n        </ToastProvider>\n      </WaitingProvider>\n    </LoginProvider>\n  </Router>\n);\n\nexport default Routes;\n","import React from 'react';\n\nimport Routes from './routes';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/person.6eadf5d6.svg\";"],"sourceRoot":""}